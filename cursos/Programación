<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Ejecutar C en GitHub Pages</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 20px; }
    textarea { width: 100%; height: 200px; font-family: monospace; }
    button { margin-top: 10px; padding: 10px 20px; }
    pre { background: #111; color: #0f0; padding: 10px; border-radius: 6px; }
  </style>
</head>
<body>
  <h1>Programación</h1>

  <!-- Salida ANTES del texto -->
  <h2>Salida inicial</h2>
  <pre id="output-before"></pre>

  <!-- Tu texto redactado -->
  <p>
    Aquí puedes escribir tu explicación, ensayo, proyecto o cualquier texto.
    El programa en C que el usuario ejecute aparecerá primero en la sección de arriba,
    y después en la de abajo, de manera que tu contenido queda enmarcado por el código.
  </p>

  <!-- Editor de código -->
  <h2>Escribe tu código en C</h2>
  <textarea id="code">
#include <stdio.h>
int main() {
    printf("Hola GitHub Pages desde C!\\n");
    return 0;
}
  </textarea>
  <br>
  <button onclick="runCode()">Ejecutar</button>

  <!-- Salida DESPUÉS del texto -->
  <h2>Salida final</h2>
  <pre id="output-after"></pre>

  <!-- Librería que interpreta C en WebAssembly -->
  <script src="https://bellard.org/quickjs/qjs-modules/c.js"></script>
  <script>
    async function runCode() {
      const code = document.getElementById("code").value;
      const outputBefore = document.getElementById("output-before");
      const outputAfter = document.getElementById("output-after");

      outputBefore.textContent = "";
      outputAfter.textContent = "";

      try {
        // Esto usa TinyCC/QuickJS compilado a WebAssembly
        const result = await CRunner.run(code);

        outputBefore.textContent = result.output;
        outputAfter.textContent = result.output;
      } catch (err) {
        outputBefore.textContent = "Error: " + err.message;
        outputAfter.textContent = "Error: " + err.message;
      }
    }
  </script>
</body>
</html>
